<?php

/**
 * RTG-Portal
 * The RTG-Portal API is an interface for selected RTG-Shop customers.
 *
 * Laravel version 9.48.x
 * PHP version 8.2.x
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: fabian.kaufmann@picard.de
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel-9/
 */


use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;

use PicardFabianKaufmann\RtgServerStub\Apis\InfrastructuralApi;
use PicardFabianKaufmann\RtgServerStub\Apis\OrdersApi;
use PicardFabianKaufmann\RtgServerStub\Apis\ProductsApi;

/**
 * GET checkConnection
 * Summary: checkConnection
 * Notes: Testing connection of shop to RTG-Portal and setting shopstatus to active
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/testconnection/{stockListToken}', [InfrastructuralApi::class, 'checkConnection'])->name('checkConnection');
/**
 * GET getCarriers
 * Summary: getCarriers
 * Notes: Get carriers
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/carriers', [InfrastructuralApi::class, 'getCarriers'])->name('getCarriers');
/**
 * GET getLanguages
 * Summary: getLanguages
 * Notes: Get all supported languages, that has been assigned in the rtg-portal
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/languages', [InfrastructuralApi::class, 'getLanguages'])->name('getLanguages');
/**
 * GET getOrderStatuscodes
 * Summary: getOrderStatuscodes
 * Notes: Get order-statuscodes
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/order/statuscodes', [InfrastructuralApi::class, 'getOrderStatuscodes'])->name('getOrderStatuscodes');
/**
 * GET getProductCategories
 * Summary: getProductCategories
 * Notes: Get all product-categories, that has been assigned in the rtg-portal
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/product/categories/{stockListToken}', [InfrastructuralApi::class, 'getProductCategories'])->name('getProductCategories');
/**
 * GET getProductManufacturers
 * Summary: getProductManufacturers
 * Notes: Get all product-manufacturers, that has been assigned in the rtg-portal
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/product/manufacturers/{stockListToken}', [InfrastructuralApi::class, 'getProductManufacturers'])->name('getProductManufacturers');
/**
 * PUT updateRequestStatus
 * Summary: updateRequestStatus
 * Notes: reporting request status, if failed or succeed
 * Output-Formats: [application/json]
 */
Route::PUT('/api/shop/v2/report_request_status', [InfrastructuralApi::class, 'updateRequestStatus'])->name('updateRequestStatus');
/**
 * POST createOrder
 * Summary: createOrder
 * Notes: Set new order
 * Output-Formats: [application/json]
 */
Route::POST('/api/shop/v2/order', [OrdersApi::class, 'createOrder'])->name('createOrder');
/**
 * GET getOrder
 * Summary: getOrder
 * Notes: Get specific orderdata
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/order/{order_id}', [OrdersApi::class, 'getOrder'])->name('getOrder');
/**
 * GET getOrderStatus
 * Summary: getOrderStatus
 * Notes: get orderstatus of specific order
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/order/{order_id}/status', [OrdersApi::class, 'getOrderStatus'])->name('getOrderStatus');
/**
 * GET getOrders
 * Summary: getOrders
 * Notes: Get all orders
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/orders', [OrdersApi::class, 'getOrders'])->name('getOrders');
/**
 * PUT updateOrderStatus
 * Summary: updateOrderStatus
 * Notes: Set new orderstatus
 * Output-Formats: [application/json]
 */
Route::PUT('/api/shop/v2/order/{order_id}/status', [OrdersApi::class, 'updateOrderStatus'])->name('updateOrderStatus');
/**
 * GET getImage
 * Summary: getImage
 * Notes: Get product images by filename
 * Output-Formats: [image/jpeg, image/png, application/json]
 */
Route::GET('/api/shop/v2/products/image/{imagename}', [ProductsApi::class, 'getImage'])->name('getImage');
/**
 * GET getImages
 * Summary: getImages
 * Notes: Get product images by filename
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/products/images/{stockListToken}', [ProductsApi::class, 'getImages'])->name('getImages');
/**
 * GET getLineartechProducts
 * Summary: getLineartechProducts
 * Notes: Provides all lineartechproductdetails
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/products/lineartech/{stockListToken}', [ProductsApi::class, 'getLineartechProducts'])->name('getLineartechProducts');
/**
 * GET getLineartechQuantities
 * Summary: getLineartechQuantities
 * Notes: Provides all lineartechquantities
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/products/lineartech/quantities/{stockListToken}', [ProductsApi::class, 'getLineartechQuantities'])->name('getLineartechQuantities');
/**
 * GET getPrices
 * Summary: getPrices
 * Notes: Provides all productprices
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/products/prices/{stockListToken}', [ProductsApi::class, 'getPrices'])->name('getPrices');
/**
 * GET getProductAttributeKeys
 * Summary: getProductAttributeKeys
 * Notes: Provides all product attribute keys
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/products/attribute_keys/{stockListToken}', [ProductsApi::class, 'getProductAttributeKeys'])->name('getProductAttributeKeys');
/**
 * GET getProductAttributeValues
 * Summary: getProductAttributeValues
 * Notes: Provides all product attribute values
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/products/attribute_values/{stockListToken}', [ProductsApi::class, 'getProductAttributeValues'])->name('getProductAttributeValues');
/**
 * GET getProducts
 * Summary: getProducts
 * Notes: Get Products with full dataset
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/products/{stockListToken}', [ProductsApi::class, 'getProducts'])->name('getProducts');
/**
 * GET getQuantities
 * Summary: getQuantities
 * Notes: Provides all productquantities
 * Output-Formats: [application/json]
 */
Route::GET('/api/shop/v2/products/quantities/{stockListToken}', [ProductsApi::class, 'getQuantities'])->name('getQuantities');
